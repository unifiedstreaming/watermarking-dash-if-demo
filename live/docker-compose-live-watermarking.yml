version: "2.1"
services:
  live-ffmpeg-a:
    build: ../docker/ffmpeg/docker/ffmpeg
    container_name: live-ffmpeg-a
    environment:
      - PUB_POINT_URI=http://live-origin-a/ingress/ingress.isml
      - 'TRACKS={ "video": [ { "width": 1280, "height": 720, "bitrate": "500k", "codec": "libx264", "framerate": 25, "gop": 48, "timescale": 25 } ], "audio": [ { "samplerate": 48000, "bitrate": "64k", "codec": "aac", "language": "eng", "timescale": 48000, "frag_duration_micros": 1920000 } ] }'
    depends_on:
      live-origin-a:
        condition: service_healthy
  live-origin-a:
    container_name: live-origin-a
    # Build internal image of Ubuntu and configure entrypoint.sh to create
    # a publishing point when the container starts.
    build: ../docker/unified-origin/docker/origin-ubuntu
    ports:
      - 8081:80
    volumes:
    - ../conf/live-origin-lua-a.conf.in:/etc/apache2/sites-enabled/unified-origin.conf
    - ../conf/remote-storage-origin-lua.conf.in:/etc/apache2/sites-enabled/remote-storage-origin-lua.conf.in
    - ../conf/lua:/var/www/unified-origin/lua
    environment:
      - REST_API_PORT=8081
      - LOG_LEVEL=warn
      - UspLicenseKey=$USP_LICENSE_KEY
      - channel=ingress
      - channel_options=--archiving=1 --archive_length=7200 --archive_segment_length=1800 --dvr_window_length=300 --restart_on_encoder_reconnect --time_shift=10 --mpd.availability_start_time=10 --hls.minimum_fragment_length=48/25 --hls.client_manifest_version=4 --splice_media --timed_metadata --mpd.segment_template=number --mpd.minimum_fragment_length=48/25
    healthcheck:
      test: kill -0 1
      interval: 2s
      timeout: 5s
      retries: 30


  live-ffmpeg-b:
    build: ../docker/ffmpeg/docker/ffmpeg
    container_name: live-ffmpeg-b
    environment:
      - PUB_POINT_URI=http://live-origin-b/ingress/ingress.isml
      - 'TRACKS={ "video": [ { "width": 1280, "height": 720, "bitrate": "500k", "codec": "libx264", "framerate": 25, "gop": 48, "timescale": 25 } ], "audio": [ { "samplerate": 48000, "bitrate": "64k", "codec": "aac", "language": "eng", "timescale": 48000, "frag_duration_micros": 1920000 } ] }'
    depends_on:
      live-origin-a:
        condition: service_healthy
  live-origin-b:
    container_name: live-origin-b
    # Build internal image of Ubuntu and configure entrypoint.sh to create
    # a publishing point when the container starts.
    build: ../docker/unified-origin/docker/origin-ubuntu
    ports:
      - 8082:80
    volumes:
    - ../conf/live-origin-lua-b.conf.in:/etc/apache2/sites-enabled/unified-origin.conf
    - ../conf/remote-storage-origin-lua.conf.in:/etc/apache2/sites-enabled/remote-storage-origin-lua.conf.in
    - ../conf/lua:/var/www/unified-origin/lua
    environment:
      - REST_API_PORT=8081
      - LOG_LEVEL=warn
      - UspLicenseKey=$USP_LICENSE_KEY
      - channel=ingress
      - channel_options=--archiving=1 --archive_length=7200 --archive_segment_length=1800 --dvr_window_length=300 --restart_on_encoder_reconnect --time_shift=10 --mpd.availability_start_time=10 --hls.minimum_fragment_length=48/25 --hls.client_manifest_version=4 --splice_media --timed_metadata --mpd.segment_template=number --mpd.minimum_fragment_length=48/25
    healthcheck:
      test: kill -0 1
      interval: 2s
      timeout: 5s
      retries: 30

  varnish-cache-proxy-b:
    ## Varnish Enterprise
    image: quay.io/varnish-software/varnish-plus:latest
    container_name: varnish-cache-proxy-b
    # networks:
    #   - origin-shield-cache
    ports:
      - 8083:80
    volumes:
      - ../conf/example_two_backends.vcl.in:/etc/varnish/default.vcl
    environment:
      - MSE_MEMORY_TARGET=1%
      - VARNISH_EXTRA=-n varnish
      - VARNISH_VCL_CONF=/etc/varnish/default.vcl
      - VARNISH_LISTEN_PORT=80
      # VARNISHD_ONLY: "false"
      - VARNISHLOG=true #varnishlog and varnishncsa are mutually exclusive
      - VARNISHNCSA=false
      - TARGET_HOST=live-origin-b
    healthcheck:
      test: kill -0 1
      interval: 2s
      timeout: 5s
      retries: 30
    depends_on:
      live-origin-a:
        condition: service_healthy
